._14nagyu1 {
  overflow-x: auto;
  overflow-y: hidden;
}
._14nagyu1::before {
  content: "";
  flex: 1;
}
._14nagyu1::after {
  content: "";
  flex: 1;
}
._14nagyu5 {
  flex-grow: 1;
}
._14nagyu7:not(:hover) {
  opacity: 0.8;
}
._14nagyu9 {
  flex: 0 0 30px;
  height: 30px;
  margin-bottom: -10px;
}
._14nagyu3:not(:hover) ._14nagyu9 {
  opacity: 0.3;
}
.j390vr1 {
  color: var(--w3q5try);
  font-family: var(--w3q5tr0);
}
.j390vr2 {
  font-size: 36px;
}
.j390vr3 {
  font-size: 24px;
}
.j390vr4 {
  font-size: 16px;
}
._19k62r62 {
  border-top: 1px solid var(--w3q5tr1c);
}
.gi5akb1:not(:last-child) {
  padding-bottom: var(--gi5akb0);
}
.gi5akb2 {
  --gi5akb0: var(--w3q5tr8);
}
.gi5akb3 {
  --gi5akb0: calc(var(--w3q5tr8) * 2);
}
.gi5akb4 {
  --gi5akb0: calc(var(--w3q5tr8) * 3);
}
.gi5akb5 {
  --gi5akb0: calc(var(--w3q5tr8) * 4);
}
.gi5akb6 {
  --gi5akb0: calc(var(--w3q5tr8) * 6);
}
.gi5akb7 {
  --gi5akb0: calc(var(--w3q5tr8) * 12);
}
._1egis8m2 {
  color: currentColor;
  background-color: transparent;
  outline: none;
  text-decoration: underline;
  margin: calc(var(--w3q5trl) * -1);
}
._1egis8m2::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: var(--w3q5trb);
  box-shadow: var(--w3q5tr1e);
  cursor: pointer;
  opacity: 0;
  transform: scale(0.8);
  transition: var(--w3q5trg);
}
._1egis8m2:focus::before, ._1egis8m2:hover::before {
  opacity: 1;
  transform: scale(1);
}
._1egis8m4 {
  height: calc(var(--w3q5tr8) * 9);
}
._1egis8m6 {
  height: 20px;
  width: 20px;
}
._1egis8m8 {
  flex-grow: 0;
  flex-shrink: 0;
  height: calc(20px - (var(--w3q5trj) * 2));
  width: calc(20px - (var(--w3q5trj) * 2));
}
._1egis8m8::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: var(--w3q5tra);
  box-shadow: var(--w3q5tr1e);
  transition: var(--w3q5trg);
  opacity: 0;
  transform: scale(0.5);
}
._1egis8m8::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: var(--w3q5tra);
  box-shadow: inset 0 0 0px 1px currentColor;
  background: var(--w3q5tr19);
}
._1egis8m6:hover:not(:focus) ~ ._1egis8m8::before, ._1egis8m6:focus ~ ._1egis8m8::before {
  opacity: 1;
  transform: scale(1);
}
._1egis8m8 > svg {
  height: 100%;
  width: 100%;
  opacity: 0;
  transform: scale(0.6);
  transition: var(--w3q5trh);
  transition-delay: 0.1s, 0.3s;
  z-index: 1;
}
._1egis8m6:checked ~ ._1egis8m8 > svg  {
  opacity: 1;
  transform: none;
  transition: var(--w3q5trh);
}
._157sx110 {
  transition: var(--w3q5trg);
  transform-origin: 50% 50%;
}
._157sx111 {
  transform: rotate(90deg);
}
._157sx112 {
  transform: rotate(180deg);
}
._157sx113 {
  transform: rotate(270deg);
}
._1e4aoci4 {
  min-width: 0;
}
._1e4aoci5 {
  flex-shrink: 0;
}
._1e4aoci9 {
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
}
._1e4aoci7:focus:not(:hover) ~ ._1e4aoci9 {
  opacity: 1;
}
.awuv8z1 {
  background: transparent;
  outline: none;
  text-decoration: none;
  white-space: nowrap;
  text-overflow: ellipsis;
  height: var(--w3q5tre);
  -webkit-tap-highlight-color: transparent;
}
.awuv8z4 {
  --awuv8z2: currentColor;
  color: var(--awuv8z2);
  border: 1px solid var(--w3q5trx);
  height: calc(var(--w3q5tr8) * 9);
}
.awuv8z4:hover {
  --awuv8z2: var(--w3q5tr12);
  border-color: var(--awuv8z2);
}
.awuv8z4:active {
  transform: scale(0.98);
}
.awuv8z4::after {
  content: "";
  position: absolute;
  transform: translateY(-50%);
  min-height: var(--w3q5tre);
  min-width: var(--w3q5tre);
  left: calc((var(--w3q5tr8) * 2) * -1);
  right: calc((var(--w3q5tr8) * 2) * -1);
  height: 100%;
  top: 50%;
}
.awuv8z4:focus:not(:active):not(:hover):not([disabled]) {
  box-shadow: var(--w3q5tr1e);
}
.awuv8z5 {
  --awuv8z2: var(--w3q5tr13) !important;
  border-color: var(--awuv8z2);
}
.awuv8z7 {
  top: 1px;
}
.mq8kcm2 {
  margin-top: calc(var(--mq8kcm0) * -1);
  margin-left: calc(var(--mq8kcm0) * -1);
}
.mq8kcm3 {
  padding-top: var(--mq8kcm0);
  padding-left: var(--mq8kcm0);
}
.mq8kcm4 {
  --mq8kcm0: var(--w3q5tr8);
}
.mq8kcm5 {
  --mq8kcm0: calc(var(--w3q5tr8) * 2);
}
.mq8kcm6 {
  --mq8kcm0: calc(var(--w3q5tr8) * 3);
}
.mq8kcm7 {
  --mq8kcm0: calc(var(--w3q5tr8) * 4);
}
.mq8kcm8 {
  --mq8kcm0: calc(var(--w3q5tr8) * 5);
}
.mq8kcm9 {
  --mq8kcm0: calc(var(--w3q5tr8) * 6);
}
._1kdzw8q1 {
  color: var(--w3q5try);
  height: var(--w3q5tre);
  background: var(--w3q5tr19);
}
._1kdzw8q1:focus {
  outline: none;
}
._1kdzw8q1::placeholder {
  color: var(--w3q5trx);
}
.zsm2v85 {
  outline: none;
  height: 60px;
  width: 60px;
  color: currentColor;
  background-color: var(--w3q5tr19);
  -webkit-tap-highlight-color: transparent;
}
.zsm2v85::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--w3q5tr1b);
  opacity: 0;
  transition: var(--w3q5trf);
  pointer-events: none;
}
.zsm2v85::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  width: 5px;
  background-color: currentColor;
  transition: var(--w3q5trf);
}
.zsm2v85.zsm2v80 {
  color: var(--w3q5tr13);
}
.zsm2v85:not(.zsm2v81) {
  cursor: pointer;
}
.zsm2v85.zsm2v81 {
  color: var(--w3q5trx);
}
.zsm2v85.zsm2v82,.zsm2v85.zsm2v83:not(.zsm2v80):not(.zsm2v81),html:not([data-playroom-dark]) .zsm2v85:hover:not(.zsm2v80):not(.zsm2v81) {
  color: var(--w3q5tr12);
}
.zsm2v85:not(.zsm2v80):not(:hover):focus::before {
  color: var(--w3q5try);
}
.zsm2v85:not(.zsm2v80):not(.zsm2v81):focus::before,.zsm2v85:not(.zsm2v80):not(.zsm2v81):hover::before {
  opacity: 1;
}
.zsm2v85:not(.zsm2v83)::after {
  transform: translateX(100%);
  opacity: 0;
}
.zsm2v88 {
  top: 12px;
  right: 12px;
  height: 10px;
  width: 10px;
  background-color: var(--w3q5tr15);
  border: 2px solid var(--w3q5tr19);
}
.zsm2v88:not(.zsm2v86) {
  transform: scale(0);
  opacity: 0;
}
.zsm2v8a {
  top: 12px;
  right: 12px;
  height: 14px;
  width: 14px;
  background-color: var(--w3q5tr13);
  border: 2px solid var(--w3q5tr19);
}
.zsm2v8a:not(.zsm2v86) {
  transform: translate3d(-15px, 9px, 0) scale(0);
  opacity: 0;
}
.zsm2v8a svg {
  color: var(--w3q5trz);
}
._1egnr5q2 {
  height: 60px;
  box-shadow: inset 0 -1px 0 0 var(--w3q5tr1c);
}
._1egnr5q4 {
  top: 60px;
}
._1egnr5q6 {
  color: var(--w3q5try);
  background-color: var(--w3q5tr19);
}
._1egnr5q6::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--w3q5tr1b);
  border-radius: var(--w3q5tra);
  opacity: 0;
  transition: var(--w3q5trf);
  pointer-events: none;
}
._1egnr5q8 {
  color: var(--w3q5tr10);
}
._1egnr5q9 {
  color: var(--w3q5tr12);
}
._1egnr5q9::before {
  opacity: 1;
}
._72fk9i2 {
  color: var(--w3q5try);
  min-width: calc(60px + 1px);
}
._72fk9i2._72fk9i0 {
  width: 100vw;
}
._72fk9i8 {
  bottom: 60px;
}
._72fk9i8:not(._72fk9i6) {
  opacity: 0;
  pointer-events: none;
  transform: translateY(20px);
}
._72fk9ia {
  width: 60px;
  background-color: var(--w3q5tr19);
  border-left: 1px solid var(--w3q5tr1c);
}
._72fk9ic {
  width: 300px;
  background-color: var(--w3q5tr19);
  border-left: 1px solid var(--w3q5tr1c);
}
._72fk9i2:not(._72fk9i0) ._72fk9ic {
  transform: translateX(calc(300px * 0.3));
  opacity: 0;
  pointer-events: none;
}
._1luo9ae3 {
  height: var(--w3q5tre);
  width: var(--w3q5tre);
}
._1luo9ae6 {
  height: var(--w3q5tre);
  width: var(--w3q5tre);
}
._1luo9ae6::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: var(--w3q5tr1b);
  border-radius: var(--w3q5trb);
  transition: var(--w3q5trg);
  opacity: 0;
  transform: scale(0.8);
}
._1luo9ae3:checked ~ ._1luo9ae6,html:not([data-playroom-dark]) ._1luo9ae3:hover ~ ._1luo9ae6 {
  color: var(--w3q5tr12);
}
._1luo9ae3:focus ~ ._1luo9ae6::before, ._1luo9ae3:hover ~ ._1luo9ae6::before {
  opacity: 1;
  transform: scale(1);
}
.agnism5 {
  padding: 0 15px;
  left: 50%;
  transform: translateX(-50%);
  top: calc(var(--w3q5tr8) * 5);
  height: calc(var(--w3q5tr8) * 8);
  max-width: calc((100vw - 60px) - (var(--w3q5trd) * 2));
}
.agnism5.agnism0 {
  padding-right: calc((15px * 2) + 16px);
}
.agnism5:not(.agnism1) {
  opacity: 0;
  pointer-events: none;
  transform: translate3d(-50%, -10px, 0);
}
.agnism5.agnism2 {
  background-color: var(--w3q5tr16);
}
.agnism5.agnism3 {
  background-color: var(--w3q5tr17);
}
.agnism7 {
  padding-left: 15px;
  right: 15px;
  height: 16px;
  width: 16px;
}
.agnism7:not(:hover) {
  opacity: 0.4;
}
/* BASICS */

.CodeMirror {
  /* Set height, width, borders, and global font properties here */
  font-family: monospace;
  height: 300px;
  color: black;
  direction: ltr;
}

/* PADDING */

.CodeMirror-lines {
  padding: 4px 0; /* Vertical padding around content */
}
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
  padding: 0 4px; /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  background-color: white; /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap;
}
.CodeMirror-linenumbers {}
.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #999;
  white-space: nowrap;
}

.CodeMirror-guttermarker { color: black; }
.CodeMirror-guttermarker-subtle { color: #999; }

/* CURSOR */

.CodeMirror-cursor {
  border-left: 1px solid black;
  border-right: none;
  width: 0;
}
/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid silver;
}
.cm-fat-cursor .CodeMirror-cursor {
  width: auto;
  border: 0 !important;
  background: #7e7;
}
.cm-fat-cursor div.CodeMirror-cursors {
  z-index: 1;
}
.cm-fat-cursor .CodeMirror-line::selection,
.cm-fat-cursor .CodeMirror-line > span::selection, 
.cm-fat-cursor .CodeMirror-line > span > span::selection { background: transparent; }
.cm-fat-cursor .CodeMirror-line::-moz-selection,
.cm-fat-cursor .CodeMirror-line > span::-moz-selection,
.cm-fat-cursor .CodeMirror-line > span > span::-moz-selection { background: transparent; }
.cm-fat-cursor { caret-color: transparent; }
@-moz-keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}
@-webkit-keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}
@keyframes blink {
  0% {}
  50% { background-color: transparent; }
  100% {}
}

/* Can style cursor different in overwrite (non-insert) mode */
.CodeMirror-overwrite .CodeMirror-cursor {}

.cm-tab { display: inline-block; text-decoration: inherit; }

.CodeMirror-rulers {
  position: absolute;
  left: 0; right: 0; top: -50px; bottom: 0;
  overflow: hidden;
}
.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  top: 0; bottom: 0;
  position: absolute;
}

/* DEFAULT THEME */

.cm-s-default .cm-header {color: blue;}
.cm-s-default .cm-quote {color: #090;}
.cm-negative {color: #d44;}
.cm-positive {color: #292;}
.cm-header, .cm-strong {font-weight: bold;}
.cm-em {font-style: italic;}
.cm-link {text-decoration: underline;}
.cm-strikethrough {text-decoration: line-through;}

.cm-s-default .cm-keyword {color: #708;}
.cm-s-default .cm-atom {color: #219;}
.cm-s-default .cm-number {color: #164;}
.cm-s-default .cm-def {color: #00f;}
.cm-s-default .cm-variable,
.cm-s-default .cm-punctuation,
.cm-s-default .cm-property,
.cm-s-default .cm-operator {}
.cm-s-default .cm-variable-2 {color: #05a;}
.cm-s-default .cm-variable-3, .cm-s-default .cm-type {color: #085;}
.cm-s-default .cm-comment {color: #a50;}
.cm-s-default .cm-string {color: #a11;}
.cm-s-default .cm-string-2 {color: #f50;}
.cm-s-default .cm-meta {color: #555;}
.cm-s-default .cm-qualifier {color: #555;}
.cm-s-default .cm-builtin {color: #30a;}
.cm-s-default .cm-bracket {color: #997;}
.cm-s-default .cm-tag {color: #170;}
.cm-s-default .cm-attribute {color: #00c;}
.cm-s-default .cm-hr {color: #999;}
.cm-s-default .cm-link {color: #00c;}

.cm-s-default .cm-error {color: #f00;}
.cm-invalidchar {color: #f00;}

.CodeMirror-composing { border-bottom: 2px solid; }

/* Default styles for common addons */

div.CodeMirror span.CodeMirror-matchingbracket {color: #0b0;}
div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #a22;}
.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }
.CodeMirror-activeline-background {background: #e8f2ff;}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

.CodeMirror {
  position: relative;
  overflow: hidden;
  background: white;
}

.CodeMirror-scroll {
  overflow: scroll !important; /* Things will break if this is overridden */
  /* 50px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -50px; margin-right: -50px;
  padding-bottom: 50px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
  z-index: 0;
}
.CodeMirror-sizer {
  position: relative;
  border-right: 50px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actual scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
  outline: none;
}
.CodeMirror-vscrollbar {
  right: 0; top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}
.CodeMirror-hscrollbar {
  bottom: 0; left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
  right: 0; bottom: 0;
}
.CodeMirror-gutter-filler {
  left: 0; bottom: 0;
}

.CodeMirror-gutters {
  position: absolute; left: 0; top: 0;
  min-height: 100%;
  z-index: 3;
}
.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  vertical-align: top;
  margin-bottom: -50px;
}
.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
}
.CodeMirror-gutter-background {
  position: absolute;
  top: 0; bottom: 0;
  z-index: 4;
}
.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}
.CodeMirror-gutter-wrapper ::selection { background-color: transparent }
.CodeMirror-gutter-wrapper ::-moz-selection { background-color: transparent }

.CodeMirror-lines {
  cursor: text;
  min-height: 1px; /* prevents collapsing before first draw */
}
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-variant-ligatures: contextual;
  font-variant-ligatures: contextual;
}
.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}

.CodeMirror-linebackground {
  position: absolute;
  left: 0; right: 0; top: 0; bottom: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  padding: 0.1px; /* Force widget margins to stay inside of the container */
}

.CodeMirror-widget {}

.CodeMirror-rtl pre { direction: rtl; }

.CodeMirror-code {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.CodeMirror-cursor {
  position: absolute;
  pointer-events: none;
}
.CodeMirror-measure pre { position: static; }

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
}
div.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-selected { background: #d9d9d9; }
.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }
.CodeMirror-crosshair { cursor: crosshair; }
.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirror-line > span > span::selection { background: #d7d4f0; }
.CodeMirror-line::-moz-selection, .CodeMirror-line > span::-moz-selection, .CodeMirror-line > span > span::-moz-selection { background: #d7d4f0; }

.cm-searching {
  background-color: #ffa;
  background-color: rgba(255, 255, 0, .4);
}

/* Used to force a border model for a node */
.cm-force-border { padding-right: .1px; }

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}

/* See issue #2901 */
.cm-tab-wrap-hack:after { content: ''; }

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext { background: none; }

/* neo theme for codemirror */

/* Color scheme */

.cm-s-neo.CodeMirror {
  background-color:#ffffff;
  color:#2e383c;
  line-height:1.4375;
}
.cm-s-neo .cm-comment { color:#75787b; }
.cm-s-neo .cm-keyword, .cm-s-neo .cm-property { color:#1d75b3; }
.cm-s-neo .cm-atom,.cm-s-neo .cm-number { color:#75438a; }
.cm-s-neo .cm-node,.cm-s-neo .cm-tag { color:#9c3328; }
.cm-s-neo .cm-string { color:#b35e14; }
.cm-s-neo .cm-variable,.cm-s-neo .cm-qualifier { color:#047d65; }


/* Editor styling */

.cm-s-neo pre {
  padding:0;
}

.cm-s-neo .CodeMirror-gutters {
  border:none;
  border-right:10px solid transparent;
  background-color:transparent;
}

.cm-s-neo .CodeMirror-linenumber {
  padding:0;
  color:#e0e2e5;
}

.cm-s-neo .CodeMirror-guttermarker { color: #1d75b3; }
.cm-s-neo .CodeMirror-guttermarker-subtle { color: #e0e2e5; }

.cm-s-neo .CodeMirror-cursor {
  width: auto;
  border: 0;
  background: rgba(155,157,162,0.37);
  z-index: 1;
}

@keyframes _1owafo11 {
  90% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
._1owafo10 {
  background-color: var(--w3q5tr1b);
}
._1owafo13 {
  background-color: var(--w3q5tr17);
  color: var(--w3q5tr11);
  min-width: 50px;
  margin-right: 4px;
  padding-right: 8px;
  animation-name: _1owafo11;
  animation-duration: 1s;
  animation-timing-function: ease;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}
._1owafo14 {
  width: 1em;
  padding: 0 8px;
}
._1owafo16::after {
  content: "-";
}
._1owafo18::after {
  content: "+";
  color: var(--w3q5tr12);
}
.react-codemirror2 {
  height: 100%;
  background-color: var(--w3q5tr19);
}
.CodeMirror {
  height: 100%;
  width: 100%;
  font-family: var(--w3q5tr1);
  position: relative;
  z-index: 0;
}
.CodeMirror-gutters {
  min-width: var(--w3q5trd);
  box-sizing: border-box;
  padding-left: 8px;
}
.CodeMirror pre, .CodeMirror-linenumber {
  font-size: 16px;
}
.CodeMirror-lines {
  padding: 16px 0;
}
.CodeMirror-hints {
  position: absolute;
  z-index: 10;
  overflow: hidden;
  list-style: none;
  margin: 0;
  padding: 0;
  box-shadow: var(--w3q5tr1d);
  border-radius: var(--w3q5tra);
  background-color: var(--w3q5tr19);
  font-size: 90%;
  line-height: 150%;
  font-family: var(--w3q5tr1);
  max-height: 20em;
  overflow-y: auto;
}
[data-playroom-dark] .CodeMirror-hints {
  background-color: var(--w3q5tr18);
}
.CodeMirror-hint {
  margin: 0;
  padding: 4px 8px;
  border-radius: var(--w3q5tr9);
  white-space: pre;
  color: var(--w3q5trq);
  cursor: pointer;
}
li.CodeMirror-hint-active {
  background-color: var(--w3q5tr15);
  color: var(--w3q5trz);
}
.CodeMirror-linenumbers {
  min-width: 50px;
}
.CodeMirror-foldmarker {
  color: var(--w3q5tr12);
  font-family: arial;
  cursor: pointer;
  padding: 0 var(--w3q5tr8);
}
.cm-s-neo.CodeMirror {
  background-color: var(--w3q5tr19);
  color: var(--w3q5trq);
}
.cm-s-neo .CodeMirror-cursor {
  background-color: var(--w3q5try);
  width: 2px;
}
.cm-s-neo .CodeMirror-gutters {
  background-color: var(--w3q5tr19);
  border: none;
}
.cm-s-neo .CodeMirror-gutters::after {
  content: "";
  background-color: var(--w3q5tr19);
  position: absolute;
  right: 2px;
  height: 100%;
  box-shadow: 0 0 10px 5px var(--w3q5tr19);
}
.cm-s-neo .CodeMirror-selected {
  background: var(--w3q5tr1b);
}
.cm-s-neo .CodeMirror-activeline-background {
  background: transparent;
}
.cm-s-neo .CodeMirror-guttermarker-subtle {
  display: flex;
  justify-content: center;
  color: var(--w3q5try);
  transition: var(--w3q5trh);
}
.cm-s-neo .CodeMirror-guttermarker-subtle:not(:hover):not(._1owafo18) {
  color: var(--w3q5trx);
}
.cm-s-neo .CodeMirror-linenumber {
  min-width: 50px;
  color: var(--w3q5try);
  transition: var(--w3q5trh);
}
.cm-s-neo .CodeMirror-linenumber:not(:hover):not(.cm-s-neo .CodeMirror-activeline .CodeMirror-linenumber) {
  color: var(--w3q5trx);
}
.cm-s-neo .cm-tag {
  color: var(--w3q5trr);
}
.cm-s-neo .cm-attribute,.cm-s-neo .cm-keyword,.cm-s-neo .cm-property {
  color: var(--w3q5trs);
}
.cm-s-neo .cm-string {
  color: var(--w3q5trt);
}
.cm-s-neo .cm-atom {
  color: var(--w3q5tru);
}
.cm-s-neo .cm-variable {
  color: var(--w3q5trv);
}
.cm-s-neo .cm-number {
  color: var(--w3q5trw);
}
html {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: var(--w3q5tr1a);
}
html[data-playroom-dark] {
  color-scheme: dark;
}
body {
  margin: 0;
}
._13igjp73 {
  position: absolute !important;
}
._13igjp76 {
  max-width: 90vw;
}
._13igjp76._13igjp74 {
  transform: translateX(100%);
}
._13igjp78 {
  max-height: 90vh;
}
._13igjp78._13igjp74 {
  transform: translateY(100%);
}
._13igjp7b._13igjp79 {
  width: 60px;
}
._13igjp7d {
  background: transparent;
  -webkit-tap-highlight-color: transparent;
  outline: none;
  min-width: var(--w3q5tre);
  height: var(--w3q5tre);
}
._13igjp7d::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: currentColor;
  opacity: 0;
  pointer-events: none;
  border-radius: var(--w3q5trb);
  transition: var(--w3q5trf);
}
._13igjp7d:not(:hover):not(:focus) {
  opacity: 0.3;
}
._13igjp7d:hover::before, ._13igjp7d:focus::before {
  opacity: 0.05;
}
._13igjp7f {
  right: 60px;
}
